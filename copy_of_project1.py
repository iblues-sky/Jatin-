# -*- coding: utf-8 -*-
"""Copy of project1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HaZV4-6JwZ6vb79ORlcrhfI22tMnnmzP
"""

import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

data = pd.read_csv('/content/application_record.csv')

data

categorical_cols =['CODE_GENDER','FLAG_OWN_CAR','FLAG_OWN_REALTY','NAME_INCOME_TYPE','NAME_EDUCATION_TYPE','NAME_FAMILY_STATUS']
data = pd.get_dummies(data, columns=categorical_cols)

from sklearn.preprocessing import StandardScaler
numerical_cols = ['AMT_INCOME_TOTAL','DAYS_BIRTH','DAYS_EMPLOYED','FLAG_MOBIL','FLAG_WORK_PHONE','FLAG_PHONE','FLAG_EMAIL','CNT_FAM_MEMBERS']
scaler = StandardScaler()
data[numerical_cols] = scaler.fit_transform(data[numerical_cols])

data['AMT_INCOME_TOTAL'] = data['DAYS_BIRTH'] / data['DAYS_EMPLOYED']

from sklearn.model_selection import train_test_split
X = data.drop('AMT_INCOME_TOTAL', axis=1)
y = data['AMT_INCOME_TOTAL']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:")
print(classification_report(y_test, y_pred))
print("Confusion Matrix:")
print(confusion_matrix(y_test,Â y_pred))